apply plugin: 'com.github.johnrengelman.shadow' 

shadowJar {
    // Allows us to build fat jars with lots of files
    zip64 true
}


//repositories {
    //jcenter()
//}


//if(hasProperty('target') && target == 'android') {

    //apply plugin: 'com.android.library'
    //apply plugin: 'com.github.dcendents.android-maven'

    //android {
        //compileSdkVersion 23
        //buildToolsVersion '23.0.2'
        //defaultConfig {
            //minSdkVersion 14
            //targetSdkVersion 23
        //}
        //compileOptions {
            //sourceCompatibility JavaVersion.VERSION_1_7
            //targetCompatibility JavaVersion.VERSION_1_7
        //}

        //// Rename the aar correctly
        //libraryVariants.all { variant ->
            //variant.outputs.each { output ->
                //def outputFile = output.outputFile
                //if (outputFile != null && outputFile.name.endsWith('.aar')) {
                    //def fileName = "${project.name}-${variant.baseName}-${version}.aar"
                    //output.outputFile = new File(outputFile.parent, fileName)
                //}
            //}
        //}

        //dependencies {
            //provided 'javax.annotation:jsr250-api:1.0'
        //}
    //}

    //afterEvaluate {
        //android.libraryVariants.all { variant ->
            //def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
            //task.description = "Create jar artifact for ${variant.name}"
            //task.dependsOn variant.javaCompile
            //task.from variant.javaCompile.destinationDir
            //task.destinationDir = project.file("${project.buildDir}/outputs/jar")
            //task.archiveName = "${project.name}-${variant.baseName}-${version}.jar"
            //artifacts.add('archives', task);
        //}
    //}

    //task sourcesJar(type: Jar) {
        //from android.sourceSets.main.java.srcDirs
        //classifier = 'sources'
    //}

    //artifacts {
        //archives sourcesJar
    //}

//} else {

//apply plugin: 'java'
//apply plugin: 'maven'

//sourceCompatibility = JavaVersion.VERSION_1_8
//targetCompatibility = JavaVersion.VERSION_1_8

install {
    repositories.mavenInstaller {
        pom.artifactId = 'stroom-auth-swagger-java-client'
    }
}

task execute(type:JavaExec) {
   main = System.getProperty('mainClass')
   classpath = sourceSets.main.runtimeClasspath
}
//}

dependencies {
    //TODO use deps variable instead of hard coding
    compile deps.javax_annotations
    compile deps.swagger_annotations
    compile deps.okhttp
    compile deps.okhttp_logginer_interceptor
    compile deps.gson
    compile deps.joda_time

    testCompile testDeps.junit
}
