{
  "swagger" : "2.0",
  "info" : {
    "description" : "Various APIs for interacting with authentication, users, and tokens.",
    "version" : "v1",
    "title" : "Stroom Auth API",
    "contact" : {
      "name" : "GCHQ",
      "url" : "https://github.com/gchq/stroom-auth"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "localhost:8080",
  "basePath" : "/",
  "tags" : [ {
    "name" : "ApiKey"
  }, {
    "name" : "Authentication"
  }, {
    "name" : "User"
  } ],
  "schemes" : [ "http", "https" ],
  "paths" : {
    "/authentication/v1" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "A welcome message.",
        "description" : "",
        "operationId" : "welcome",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/authentication/v1/authenticate" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Submit an OpenId AuthenticationRequest.",
        "description" : "",
        "operationId" : "handleAuthenticationRequest",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "scope",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "response_type",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "client_id",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "redirect_url",
          "in" : "query",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "nonce",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "prompt",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Handle a login request made using username and password credentials.",
        "description" : "",
        "operationId" : "handleLogin",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Credentials",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Credentials"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/authentication/v1/changePassword" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Change a user's password.",
        "description" : "",
        "operationId" : "changePassword",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "changePasswordRequest",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ChangePasswordRequest"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/authentication/v1/idToken" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Convert a previously provided access code into an ID token",
        "description" : "",
        "operationId" : "getIdToken",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "IdTokenRequest",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/IdTokenRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/authentication/v1/isPasswordValid" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Returns the length and complexity rules.",
        "description" : "",
        "operationId" : "isPasswordValid",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "passwordValidationRequest",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PasswordValidationRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/authentication/v1/logout" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Log a user out of their session",
        "description" : "",
        "operationId" : "logout",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "redirect_url",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation"
          }
        }
      }
    },
    "/authentication/v1/needsPasswordChange" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Check if a user's password needs changing.",
        "description" : "",
        "operationId" : "needsPasswordChange",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/authentication/v1/reset/{email}" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Reset a user account using an email address.",
        "description" : "",
        "operationId" : "resetEmail",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/authentication/v1/resetPassword" : {
      "post" : {
        "tags" : [ "Authentication" ],
        "summary" : "Reset an authenticated user's password.",
        "description" : "",
        "operationId" : "resetPassword",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "changePasswordRequest",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/ResetPasswordRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/authentication/v1/verify/{token}" : {
      "get" : {
        "tags" : [ "Authentication" ],
        "summary" : "Verify the authenticity and current-ness of a JWS token.",
        "description" : "",
        "operationId" : "verifyToken",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/token/v1" : {
      "post" : {
        "tags" : [ "ApiKey" ],
        "summary" : "Create a new token.",
        "description" : "",
        "operationId" : "create",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "CreateTokenRequest",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/CreateTokenRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Token"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiKey" ],
        "summary" : "Delete all tokens.",
        "description" : "",
        "operationId" : "deleteAll",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/token/v1/byToken/{token}" : {
      "get" : {
        "tags" : [ "ApiKey" ],
        "summary" : "Read a token by the token string itself.",
        "description" : "",
        "operationId" : "read",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Token"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiKey" ],
        "summary" : "Delete a token by the token string itself.",
        "description" : "",
        "operationId" : "delete",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "token",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/token/v1/publickey" : {
      "get" : {
        "tags" : [ "ApiKey" ],
        "summary" : "Provides access to this service's current public key. A client may use these keys to verify JWTs issued by this service.",
        "description" : "",
        "operationId" : "getPublicKey",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/token/v1/search" : {
      "post" : {
        "tags" : [ "ApiKey" ],
        "summary" : "Submit a search request for tokens",
        "description" : "",
        "operationId" : "search",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "SearchRequest",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/SearchRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/SearchResponse"
            }
          }
        }
      }
    },
    "/token/v1/{id}" : {
      "get" : {
        "tags" : [ "ApiKey" ],
        "summary" : "Read a token by ID.",
        "description" : "",
        "operationId" : "read",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/Token"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ApiKey" ],
        "summary" : "Delete a token by ID.",
        "description" : "",
        "operationId" : "delete",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/token/v1/{id}/state" : {
      "get" : {
        "tags" : [ "ApiKey" ],
        "summary" : "Enable or disable the state of a token.",
        "description" : "",
        "operationId" : "toggleEnabled",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "enabled",
          "in" : "query",
          "required" : true,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/user/v1" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get all users.",
        "description" : "",
        "operationId" : "getAll",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Create a user.",
        "description" : "",
        "operationId" : "createUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "user",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      }
    },
    "/user/v1/me" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get the details of the currently logged-in user.",
        "description" : "",
        "operationId" : "readCurrentUser",
        "produces" : [ "application/json" ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/user/v1/search" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Search for a user by email.",
        "description" : "",
        "operationId" : "searchUsers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "email",
          "in" : "query",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    },
    "/user/v1/{id}" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Get a user by ID.",
        "description" : "",
        "operationId" : "getUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Update a user.",
        "description" : "",
        "operationId" : "updateUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "user",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "User" ],
        "summary" : "Delete a user by ID.",
        "description" : "",
        "operationId" : "deleteUser",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "type" : "string"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "ChangePasswordRequest" : {
      "type" : "object",
      "required" : [ "email", "newPassword", "oldPassword" ],
      "properties" : {
        "newPassword" : {
          "type" : "string",
          "description" : "The new password."
        },
        "oldPassword" : {
          "type" : "string",
          "description" : "The old password."
        },
        "email" : {
          "type" : "string",
          "description" : "The email address of the user we're changing the password for."
        }
      },
      "description" : "A request to change a user's password."
    },
    "CreateTokenRequest" : {
      "type" : "object",
      "required" : [ "tokenType", "userEmail" ],
      "properties" : {
        "userEmail" : {
          "type" : "string",
          "description" : "The email of the user whom the token is for."
        },
        "tokenType" : {
          "type" : "string",
          "description" : "The type of token to create: e.g. user, api, or email_reset.",
          "pattern" : "^user$|^api$|^email_reset$"
        },
        "expiryDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The expiry date for an API key."
        },
        "comments" : {
          "type" : "string",
          "description" : "Comments about the token."
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "Whether or not the new token should be enabled."
        },
        "parsedTokenType" : {
          "type" : "string",
          "enum" : [ "USER", "API", "EMAIL_RESET" ]
        }
      },
      "description" : "A request to create a token."
    },
    "Credentials" : {
      "type" : "object",
      "required" : [ "email", "password" ],
      "properties" : {
        "requestingClientId" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        }
      }
    },
    "IdTokenRequest" : {
      "type" : "object",
      "required" : [ "accessCode", "clientId", "clientSecret" ],
      "properties" : {
        "clientId" : {
          "type" : "string",
          "description" : "The client id. This is a string that uniquely identifies the client."
        },
        "clientSecret" : {
          "type" : "string",
          "description" : "The client's secret. This is a cryptographically random string that authenticates the client."
        },
        "accessCode" : {
          "type" : "string",
          "description" : "The access code to exchange for an id token. This will have been provided to the RP after successfully authenticating, or if they were already authenticated"
        }
      },
      "description" : "A request to exchange an access code with an id token. This is the final step in the OpenID authentication flow and must be a back-channel call, i.e. the client secret should never be sent to a browser."
    },
    "PasswordValidationRequest" : {
      "type" : "object",
      "required" : [ "email", "newPassword" ],
      "properties" : {
        "oldPassword" : {
          "type" : "string",
          "description" : "THe user's old password"
        },
        "email" : {
          "type" : "string",
          "description" : "The user's email address."
        },
        "newPassword" : {
          "type" : "string",
          "description" : "The new password for the user."
        }
      },
      "description" : "A request to validate a user's password."
    },
    "ResetPasswordRequest" : {
      "type" : "object",
      "required" : [ "newPassword" ],
      "properties" : {
        "newPassword" : {
          "type" : "string",
          "description" : "The new password."
        }
      }
    },
    "SearchRequest" : {
      "type" : "object",
      "required" : [ "limit", "page" ],
      "properties" : {
        "page" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The page of search results to retrieve."
        },
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The number of tokens in a page of search results."
        },
        "orderBy" : {
          "type" : "string",
          "description" : "The property by which to order the results.",
          "pattern" : "^enabled$|^userEmail$|^issueByUser$|^token$|^tokenType$|^updatedByUser$|^expiresOn$|^issuedOn$|^updatedOn$"
        },
        "orderDirection" : {
          "type" : "string",
          "description" : "The direction in which to order the results.",
          "pattern" : "^asc$|^desc$"
        },
        "filters" : {
          "type" : "object",
          "description" : "How to filter the results. This is done by property, e.g. user_email, 'someone@someplace.com'.",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      },
      "description" : "A request for a search over tokens."
    },
    "SearchResponse" : {
      "type" : "object",
      "required" : [ "tokens", "totalPages" ],
      "properties" : {
        "tokens" : {
          "type" : "array",
          "description" : "A page of results.",
          "items" : {
            "$ref" : "#/definitions/Token"
          }
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The total number of pages."
        }
      },
      "description" : "A response for a search of tokens."
    },
    "Token" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userEmail" : {
          "type" : "string"
        },
        "tokenType" : {
          "type" : "string"
        },
        "token" : {
          "type" : "string"
        },
        "expiresOn" : {
          "type" : "string"
        },
        "issuedOn" : {
          "type" : "string"
        },
        "issuedByUser" : {
          "type" : "string"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "updatedOn" : {
          "type" : "string"
        },
        "updateByUser" : {
          "type" : "string"
        }
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "comments" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        },
        "state" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "passwordHash" : {
          "type" : "string"
        },
        "loginFailures" : {
          "type" : "integer",
          "format" : "int32"
        },
        "loginCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "lastLogin" : {
          "type" : "string"
        },
        "updatedOn" : {
          "type" : "string"
        },
        "updatedByUser" : {
          "type" : "string"
        },
        "createdOn" : {
          "type" : "string"
        },
        "createdByUser" : {
          "type" : "string"
        },
        "neverExpires" : {
          "type" : "boolean"
        },
        "forcePasswordChange" : {
          "type" : "boolean"
        },
        "reactivatedDate" : {
          "type" : "string"
        }
      }
    }
  }
}