server:
  registerDefaultExceptionMappers: false
  adminMinThreads: 1
  adminMaxThreads: 10
  adminContextPath: ${ADMIN_CONTEXT_PATH:- /}
  applicationContextPath: ${APPLICATION_CONTEXT_PATH:- /}
  applicationConnectors:
    - type: ${APPLICATION_CONNEXTOR_TYPE:- http}
      port: ${APPLICATION_CONNEXTOR_PORT:- 8099}
  adminConnectors:
    - type: ${ADMIN_CONNEXTOR_TYPE:- http}
      port: ${ADMIN_CONNEXTOR_PORT:- 8100}

database:
  driverClass: org.mariadb.jdbc.Driver
  user: ${DB_USER:- stroomuser}
  password: ${DB_PASSWORD:- stroompassword1}
  url: ${DB_URL:- jdbc:mariadb://localhost:3309/auth}
  properties:
    charSet: UTF-8
    hibernate.dialect: org.hibernate.dialect.MySQLInnoDBDialect
    hibernate.show_sql: false

logging:
  level: ${LOGGING_LEVEL:- ERROR}
  loggers:
    stroom: DEBUG
    io.dropwizard: INFO
    org.eclipse.jetty: INFO
    org.flywaydb: INFO
  appenders:
    - type: console
      logFormat: "%-6level [%d{HH:mm:ss.SSS}] [%t] %logger{5} - %X{code} %msg %n"
      timeZone: UTC

jooq:
  dialect: MYSQL
  logExecutedSql: yes
  renderSchema: yes
  renderNameStyle: QUOTED
  renderKeywordStyle: LOWER
  renderFormatted: no
  paramType: INDEXED
  statementType: PREPARED_STATEMENT
  executeLogging: no
  executeWithOptimisticLocking: no
  attachRecords: yes
  updatablePrimaryKeys: no

token:
  minutesUntilExpirationForUserToken: ${JWS_MINUTES_UNTIL_EXPIRATION_FOR_USER_TOKEN:- 43200} # 43200 minutes = 30 days
  minutesUntilExpirationForApiToken: ${JWS_MINUTES_UNTIL_EXPIRATION_FOR_API_TOKEN:- 525600} # 525600 minutes = 1 year
  minutesUntilExpirationForEmailResetToken: ${JWS_MINUTES_UNTIL_EXPIRATION_FOR_EMAIL_RESET_TOKEN:- 5} # 5 minutes - short validity for the token
  jwsIssuer: ${JWS_ISSUER:- stroom}
  # There is no default for jwsSecret. It must be set as an environment variable. Reason: env var substitution
  # does not mix well with JSON. It gets very confused about braces.
  # {"kty":"RSA","n":"3O_2TMCoiUyd-WekiqO1G_Kq2lNgWvJMQH7XL6AYDa2XJQKoDarYwKJUlqvhZV0SP_hoBJqmIIGfiziaSHeftjxMIoX2AIRL-l1hHswMC6DbtX1WSHcuvEwgxMObku1LRyjLmCeboRxgTAgKBneY2Ruz-dWJha7dupH0ub5jkWgRKa6CTuZqbyxq3qn1N2JqJzm_b6kJpbA1hfqq5f0xTy7QuMyl88sOmk71CRslWzteH_jQfUEyYfKhauUrwTn5pVYSIwZssOc7tbe2IClCZLGF6E4Bkg72xvg6SIRXELQU0EXhy2aP-ycsAxGrkmifs3_I8oJFQ_YhxH4k43i19Q","e":"AQAB","d":"clZM5JOfpM5dwsB8SrNF-tyuxqX3a5mRFJ-PxTnYuNtpKOIjDk-oNKjNldwFnWt5Eln_msJdztzGMEpuraoaoTi7PfKNyN6uYzcIF-QJJ8traJUgngfvy8qp-qowTO040-6szmVRCSOiQja22XnzRAguL9DuhpxkazU1rRp2dLyr1riKz2pKJOQdGLSCOT9IW1epphvmQaKIlcbjTO5yTXu85aLhmJ6_Oj6_HzC2QzHnAwi6TQ6rZfuYiq99nm5QBlGbM3q-6FMaQu7bGqA9CQ10TyHp7ksZK6KyIFOuI3E9q6w3FiLaTPeiyTPI3S6Y08SJo0hb9gGP3PwYHIduUQ","p":"_eMGWwsUIjT_9Tcrrp-zM9spHFr-6eOZPVy7KUA4BOGfxCrf8MRqBdtrAQ7daNEiwm3b8o6VFd8i7wr6XZ4v-wv4x_fHeLh4gkqv17o7YtdiX3zBb5QSnW4yLhcTxabxH9GoZhR6XXe0JrGedHE7dXqiyNKmsH1-zwKZ2yNHRYs","q":"3sa6vYB4JYMpVbRnRwCAIVqlzzVZ3s2WRfbUvRE2EW_HEV_xi1enJEYEGPLI8SKQ0Si9cwnOzH8irRqgMqmbOxl863KbDTAfPSGnuKWMmK5Z0-40T3JmNQE_UQnvRChmaM4cuQRpV0I_6DyZF0y3u23PZ0MyoY8VANOdays6Yn8","dp":"_dIqWHsK9efmvVEa6snebsl8oEyY7VwNp7s9olABsV-gSo5StHKpTJHAuJ4T3Oa4yYjri-PgSK18T1-6Tj4H2gRuA_1D_vzt_dSNWC9nj7mlL7GZ8eMneRziLhIEQmZUSmtg4C046Jj0Ensg32kU-K5ScFOpMmlEjdEb4Gm0p2E","dq":"b54aikAH8qOY3jwZUtXJXOzSDtOoR52yITPeuywYbvwWPXpYx3wPXnlGLEnYrBipfmJvKWhMmOFKOnkQstGP2TiYAk_Vp_HodPSb2EP6AbW5hBnhU7z5wKzzUGMt4nRrey9p7LltHi8vXeieu7HQjLQkKpTclV3fJB7izINIKXk","qi":"dVAmm8DiOgCR4ZevOQfe7cr_jt1alzGk6MndwuyEPPRvMHOS9Ndf26mgw0FY916prEGoCBpj3m6gfWdZAhKpOzIrOLp0TJ6wNoiyDvGBYvfNfbUBXRskt6lPQ5NBc2dvZIFB7njXWQeEgcH5YYkkxoCzPil1amxIom0Li7W8_mk"}
  jwsSecret: ${JWS_VERIFICATION_KEY:- 'JWS_VERIFICATION_KEY env var is not set!'}
  requireExpirationTime: ${JWS_REQUIRE_EXPIRATION_TIME:- false}
  algorithm: ${JWS_ALGORITHM:- RS256}

certificateDnPattern: ${CERTIFICATE_DN_PATTERN:- CN=[^ ]+ [^ ]+ \(?([a-zA-Z0-9]+)\)?}
loginUrl: ${AUTH_UI:- http://localhost:5000/login}
stroomUrl: ${STROOM_UI:- http://localhost:8099}
resetPasswordUrl: ${RESET_PASSWORD_URL:- 'http://localhost/resetPassword/?token=%s'}
advertisedHost: ${ADVERTISED_HTTP_HOST:- http://localhost}
failedLoginLockThreshold: ${FAILED_LOGIN_LOCK_THRESHOLD:- 3}
sessionIdCookieMaxAge: ${SESSION_ID_COOKIE_MAX_AGE:- 2592000} # 2592000 = 1 month

authorisationService:
  url: ${AUTHORISATION_SERVICE_URL:- http://localhost:8080/api/authorisation/v1}
  canManageUsersPath: ${AUTHORISATION_SERVICE_CAN_MANAGE_USERS_PATH:- /canManageUsers}
  canManageUsersPermission: ${AUTHORISATION_SERVICE_CAN_MANAGE_USERS_PERMISSION:- Manage Users}

email:
  fromAddress: ${EMAIL_FROM_ADDRESS:- noreply@stroom.com}
  fromName: ${EMAIL_FROM_NAME:- Stroom User Accounts}
  passwordResetSubject: ${EMAIL_RESET_SUBJECT:- Password reset for Stroom}
  passwordResetText: ${EMAIL_RESET_TEXT:- 'A password reset has been requested for this email address. Please visit the following URL to reset your password: %s.'}
  passwordResetTokenValidityInMinutes: ${EMAIL_RESET_TOKEN_VALIDITY_IN_MINUTES:- 5}
  smtp:
    host: ${EMAIL_SMTP_HOST:- smtp.gmail.com}
    port: ${EMAIL_SMTP_PORT:- 587}
    transport: ${EMAIL_SMTP_TRANSPORT:- TLS} # Possible values: TLS, SSL, plain. Defaults to plain if unspecified.
    username: ${EMAIL_SMTP_USERNAME:- TODO}
    password: ${EMAIL_SMTP_PASSWORD:- TODO}